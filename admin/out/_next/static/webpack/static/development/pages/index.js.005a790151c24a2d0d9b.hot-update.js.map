{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.005a790151c24a2d0d9b.hot-update.js","sources":["webpack:///./fetchers/targets.js","webpack:///./pages/index.js"],"sourcesContent":["import httpFetch from '../fetch';\r\nimport config from '../config';\r\n\r\nexport async function fetchTargets(setTargets, setErrorMessage) {\r\n    try {\r\n      const result = await httpFetch(config.apiPrefix + '/resources/targets.json');\r\n      if (result.ok) {\r\n        const targets = await result.json();\r\n        setTargets(targets);\r\n      } else {\r\n        setErrorMessage('Completed fetch but got bad status from resource: ' + result.status);\r\n      }\r\n    } catch (err) {\r\n      setErrorMessage('Could not complete fetch: ' + err);\r\n    }\r\n  }","import '../node_modules/uikit/dist/css/uikit.min.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { ensureInstalled } from '../setup';\r\nimport { fetchServices } from '../fetchers/services';\r\nimport { fetchTargets } from '../fetchers/targets';\r\nimport ServiceSummary from '../components/ServiceSummary';\r\nimport Header from '../components/Header';\r\n\r\nexport default function Home() {\r\n  const [services, setServices] = useState([]);\r\n  const [targets, setTargets] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  useEffect(() => {\r\n    ensureInstalled();\r\n    fetchServices(setServices, setErrorMessage);\r\n    fetchTargets(setTargets, setErrorMessage);\r\n  }, []);\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      fetchServices(setServices, setErrorMessage);\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n  return (\r\n    <div className=\"uk-container\">\r\n      <Header title=\"Your Mediasummon Dashboard\" />\r\n      {errorMessage ? \r\n        <div className=\"uk-alert-danger\" uk-alert=\"true\">\r\n          <a className=\"uk-alert-close\" uk-close=\"true\"></a>\r\n          <p><span uk-icon=\"warning\" /> {errorMessage}</p>\r\n        </div> : null}\r\n      <div className=\"uk-section uk-section-default uk-padding-remove\">\r\n        <h3>Services to sync</h3>\r\n        {services.map(service => {\r\n          return <ServiceSummary key={service.metadata.id} service={service} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}
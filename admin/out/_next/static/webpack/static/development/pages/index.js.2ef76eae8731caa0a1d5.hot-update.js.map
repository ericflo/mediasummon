{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2ef76eae8731caa0a1d5.hot-update.js","sources":["webpack:///./setup.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport config from './config';\r\nimport { loadAuthToken } from './fetchers/common';\r\nimport { fetchCurrentUserConfig } from './fetchers/userconfig';\r\nimport Router from 'next/router';\r\n\r\nvar installed = false;\r\nvar installedCSRF = null;\r\n\r\nexport function ensureInstalled(token) {\r\n  if (installed) {\r\n    return;\r\n  }\r\n\r\n  // Load UIKit and tell it to use its 'Icons' plugin\r\n  const UIKit = require('uikit');\r\n  const Icons = require('uikit/dist/js/uikit-icons');\r\n  UIKit.use(Icons);\r\n\r\n  const dayjs = require('dayjs');\r\n  const relativetime = require('dayjs/plugin/relativeTime');\r\n  dayjs.extend(relativetime);\r\n\r\n  var req = new XMLHttpRequest();\r\n  req.addEventListener('load', function() {\r\n    installedCSRF = req.getResponseHeader('x-csrf-token');\r\n  });\r\n  req.open('GET', config.apiPrefix, true);\r\n  if (token) {\r\n    req.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n  }\r\n  req.send(null);\r\n\r\n  installed = true;\r\n}\r\n\r\nexport function getInstalledCSRF() {\r\n  return installedCSRF;\r\n}\r\n\r\nexport function useRequiredUserConfig() {\r\n  const [state, setState] = useState({userConfig: undefined, token: undefined});\r\n  useEffect(() => {\r\n    async function fetchConfig() {\r\n      try {\r\n        const token = await loadAuthToken();\r\n        const userConfig = await fetchCurrentUserConfig();\r\n        setState({userConfig, token});\r\n      } catch (err) {\r\n        Router.push('/login');\r\n      }\r\n    }\r\n    fetchConfig();\r\n  }, []);\r\n  return state;\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AASA;AACA;AACA;AACA;;;;A","sourceRoot":""}
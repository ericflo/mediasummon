{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.2913f1b03670e63be378.hot-update.js","sources":["webpack:///./fetchers/common.js","webpack:///./fetchers/login.js"],"sourcesContent":["export async function extractMessageFromJSONError(resp) {\r\n  try {\r\n    const errJson = await resp.json();\r\n    if (errJson.error) {\r\n      return errJson.error;\r\n    }\r\n    return 'Completed fetch but got error from resource: ' + errJson;\r\n  } catch (err) {\r\n    return 'Completed fetch but got bad status from resource: ' + resp.status + ' (' + err + ')';\r\n  }\r\n}\r\n\r\nexport async function throwMessageFromJSONError(resp) {\r\n  const msg = await extractMessageFromJSONError(resp);\r\n  throw msg;\r\n}\r\n\r\nexport function encodeQuery(params) {\r\n  return Object.keys(params).map((key) => {\r\n    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  }).join('&');\r\n}","import httpFetch from '../fetch';\r\nimport { getInstalledCSRF } from '../setup';\r\nimport { throwMessageFromJSONError, encodeQuery } from './common';\r\n\r\nexport async function fetchLogin(username, password) {\r\n  try {\r\n    const params = {username, password};\r\n    const result = await httpFetch(config.apiPrefix + '/auth/login.json', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n        'X-CSRF-Token': getInstalledCSRF(),\r\n      },\r\n      credentials: 'include',\r\n      body: encodeQuery(params),\r\n    });\r\n    if (result.ok) {\r\n      return await result.json();\r\n    } else {\r\n      await throwMessageFromJSONError(result);\r\n    }\r\n  } catch (err) {\r\n    throw 'Could not complete fetch: ' + err;\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAYA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AAJA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;A","sourceRoot":""}
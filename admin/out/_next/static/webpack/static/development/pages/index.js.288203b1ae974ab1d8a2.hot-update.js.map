{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.288203b1ae974ab1d8a2.hot-update.js","sources":["webpack:///./fetchers/services.js"],"sourcesContent":["import httpFetch from '../fetch';\r\nimport config from '../config';\r\nimport { getInstalledCSRF } from '../setup';\r\n\r\nexport async function fetchServices() {\r\n  try {\r\n    const result = await httpFetch(config.apiPrefix + '/resources/services.json');\r\n    if (result.ok) {\r\n      const services = await result.json();\r\n      for (let i = 0; i < services.length; ++i) {\r\n        const service = services[i];\r\n        const sync = service.last_sync;\r\n        if (!sync) {\r\n          continue;\r\n        }\r\n        sync.startString = sync.start;\r\n        sync.start = Date.parse(sync.start);\r\n        if (sync.end) {\r\n          sync.endString = sync.end;\r\n          sync.end = Date.parse(sync.end);\r\n        }\r\n      }\r\n      return services;\r\n    } else {\r\n      throwMessageFromJSONError(result);\r\n    }\r\n  } catch (err) {\r\n    throw 'Could not complete fetch: ' + err;\r\n  }\r\n}\r\n\r\nexport async function fetchServiceSyncStart(serviceID) {\r\n  const url = config.apiPrefix + '/resources/service/sync.json?service='+serviceID;\r\n  const resp = await httpFetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-CSRF-Token': getInstalledCSRF(),\r\n    },\r\n    credentials: 'include',\r\n  });\r\n  const data = await resp.json();\r\n  return data;\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAjBA;AAKA;AALA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAoBA;AACA;AArBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA2BA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;A","sourceRoot":""}